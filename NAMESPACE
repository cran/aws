useDynLib(aws, .registration = TRUE, .fixes = "C_")
if(capabilities("X11")) importFrom(grDevices,X11.options)
if(capabilities("aqua"))  importFrom(grDevices,quartz.options)

import("methods")
importFrom("awsMethods", "setCores", "extract", "risk")
importFrom("gsl", "hyperg_1F1")
importFrom("grDevices", "grey")
importFrom("graphics", "axis", "contour", "image", "lines", "mtext",
             "par", "title","plot")
importFrom("stats", "IQR", "coefficients", "cor", "dnorm", "fft", "lm",
             "median", "nextn", "pchisq", "qchisq", "qnorm",
             "quantile", "rbinom", "rchisq", "rexp", "rnorm", "rpois",
             "sd", "cov", "var", "prcomp", "optim", "optimize", "runif",
             "nls", "density")
importFrom("utils", "setTxtProgressBar", "txtProgressBar")

exportClasses("aws","awssegment","kernsm","ICIsmooth")

exportMethods("extract","print","summary","show","plot","risk")

export(aws, lpaws, aws.irreg, aws.gaussian, aws.segment, paws)
export(vaws, vawscov, vpaws)
export(awsdata, binning)
export(awstestprop, pawstestprop, awsweights)
export(kernsm, ICIsmooth, ICIcombined)
export(TV_denoising, TGV_denoising, TV_denoising_colour, TGV_denoising_colour)
export(qmeasures)
export(nlmeans)
export(estimateSigmaCompl, medianFilter3D, vpawscov2)
export(smse3, smse3ms, aws3Dmask, aws3Dmaskfull, gethani, getvofh)
export(awsLocalSigma, AFLocalSigma, estGlobalSigma, sofmchi)
export(residualSpatialCorr, residualVariance)
export(smooth3D, awslinsd)
